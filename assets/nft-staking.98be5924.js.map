{"version":3,"file":"nft-staking.98be5924.js","sources":["../../src/components/UI/atoms/checkbox/index.tsx","../../src/components/UI/atoms/input/index.tsx","../../src/components/UI/atoms/select/index.tsx","../../src/components/UI/atoms/label/index.tsx","../../src/components/UI/atoms/alert/index.tsx","../../src/components/UI/atoms/validation/index.tsx","../../src/utils/math.ts","../../src/components/hooks/useStaking.ts","../../src/components/UI/atoms/input-group/index.tsx","../../src/components/UI/organisms/address/index.tsx","../../src/components/UI/atoms/table/table.tsx","../../src/components/UI/atoms/table/tbody.tsx","../../src/components/UI/atoms/table/thead.tsx","../../src/components/UI/atoms/table/thead-tr.tsx","../../src/components/UI/atoms/table/tbody-tr.tsx","../../src/components/UI/atoms/table/th.tsx","../../src/components/UI/atoms/table/td.tsx","../../src/components/UI/molecules/simple-table/index.tsx","../../src/components/UI/atoms/headings/heading.tsx","../../src/components/pages/nft-staking.tsx"],"sourcesContent":["import React, { InputHTMLAttributes } from 'react';\n\ninterface CheckboxProps\n  extends React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >,\n  React.AriaAttributes {\n}\n\nexport default function Input(props: CheckboxProps) {\n  return (\n    <input type=\"checkbox\" className=\"w-4 h-4 bg-gray-100 rounded border-gray-300 mr-3\" {...props} />\n  );\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport default function Input({\n  error,\n  onEnterPress,\n  onChange,\n  onKeyDown = null,\n  ...props\n}) {\n  const classes = classNames({\n    \"w-full py-2 pl-2 border border-2 text-sm text-gray-600 placeholder-gray-400 rounded\": true,\n    \"border-red-500\": error,\n    \"border-transparent\": !error\n  });\n\n  const handleKeyPress = (evt) => {\n    if (\n      evt.key === 'Enter'\n      && onEnterPress\n      && typeof onEnterPress === 'function'\n    ) {\n      onEnterPress(evt);\n    }\n\n    if (onKeyDown && typeof onKeyDown === 'function') {\n      onKeyDown(evt);\n    }\n  };\n\n  return (\n    <DebounceInput\n      minLength={2}\n      debounceTimeout={300}\n      onKeyDown={handleKeyPress}\n      onChange={onChange}\n      className={classes}\n      {...props}\n    />\n  );\n}\n","import React from 'react';\n\ntype Options = {\n  value: any,\n  label: string\n}\n\ninterface SelectProps\n  extends React.DetailedHTMLProps<\n    React.SelectHTMLAttributes<HTMLSelectElement>,\n    HTMLSelectElement\n  >,\n  React.AriaAttributes {\n  options: Options[] | Array<any>\n}\n\nexport default function Select({ options = [], ...props }: SelectProps) {\n  return (\n    <select\n      className=\"w-full md:flex-1 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded p-2.5\"\n      {...props}\n    >\n      {\n        options.map((option) => {\n          const value = option.value ?? option;\n          const label = option.label ?? option;\n\n          return <option key={value} value={value}>{label}</option>\n        })\n      }\n    </select>\n  );\n}\n","import React from 'react';\n\ninterface InputProps\n  extends React.DetailedHTMLProps<\n    React.LabelHTMLAttributes<HTMLLabelElement>,\n    HTMLLabelElement\n  >,\n  React.AriaAttributes {\n  children: React.ReactNode;\n}\n\nexport default function Label({ children, ...props }: InputProps) {\n  return (\n    <label className=\"block w-full mb-3 md:w-1/3 mr-6 text-left text-gray-300\" {...props}>\n      {children}\n    </label>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport enum Type {\n  warning,\n  success,\n}\n\ntype AlertProps = {\n  children?: React.ReactNode;\n  title?: string;\n  type: Type;\n};\n\nexport default function Alert({ children, type, title }: AlertProps) {\n  const containerClasses = classNames({\n    'border-t-4 rounded px-4 py-3 shadow-md mb-5': true,\n    'bg-red-100 border-red-500 text-red-900': type === Type.warning,\n    'bg-teal-100 border-teal-500 text-teal-900': type === Type.success,\n  });\n\n  const iconClasses = classNames({\n    'fill-current h-6 w-6 mr-4': true,\n    'text-red-900': type === Type.warning,\n    'text-teal-900': type === Type.success,\n  });\n\n  return (\n    <div className={containerClasses} role=\"alert\">\n      <div className=\"flex items-center\">\n        <div className=\"py-1\">\n          <svg\n            className={iconClasses}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\n          </svg>\n        </div>\n        <div>\n          <p className=\"font-bold\">{title}</p>\n          <p className=\"text-sm\">{children}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface ValdiationProps {\n  children: React.ReactNode;\n  visible?: boolean;\n}\n\nexport default function Validation({ children, visible = false }: ValdiationProps) {\n  if (!visible) return null;\n\n  return (\n    <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">\n      {children}\n    </span>\n  );\n}\n\n\n","import { roundTo } from 'round-to';\n\n/**\n * Better round number\n * @param value\n * @param decimals\n * @returns\n */\nexport function round(value: number, decimals: number = 2): number {\n  return roundTo(value, decimals);\n}\n\n/**\n * Return an array of numbers defined by parameters\n * @param start\n * @param end\n * @returns\n */\nexport function rangeBetween(start: number, end: number): Array<number> {\n  const range = [];\n  for (let i: number = start; i <= end; i += 1) {\n    range.push(i);\n  }\n  return range;\n}\n\n/**\n * Sum values in array\n * @param array\n * @param decimals\n * @returns\n */\nexport function sum(array: Array<number>, decimals: number = 2): number {\n  return array.reduce((a, b) => a + b, 0);\n}\n\n/**\n * Vertically sum values in array by index\n * @param array\n * @returns\n */\nexport function sumVertically(array: Array<Array<number>>): Array<number> {\n  if (array.length === 0) return [];\n\n  const sum = (r, a) => r.map((b, i) => a[i] + b);\n  return array.reduce(sum);\n}\n","import { useCallback } from 'react';\nimport { StakingAssetRewards, StakingReference } from '../../models/Staking';\nimport * as reference from '../../assets/data/reference.json';\nimport { round, sum, sumVertically } from '../../utils/math';\n\nconst calculateRewards = (\n  rewards: StakingAssetRewards[],\n  stakingFromEpoch: number,\n  epochWaitPeriod: number,\n  showOnlyOwned: boolean,\n  quantityFn: Function,\n  calculationFn: Function,\n) => {\n  // Keep track of hidden rows so we can keep accurate row count.\n  let hidden = 0;\n  const output = [] as Array<any>;\n\n  // eslint-disable-next-line implicit-arrow-linebreak\n  rewards.forEach((reward: StakingAssetRewards, rowIndex) => {\n    const quantity = quantityFn(reward.display_name);\n    const epochs = Object.keys(reward.epochs);\n\n    if (showOnlyOwned && quantity === 0) {\n      hidden += 1;\n      return false;\n    }\n\n    const row = [] as Array<number>;\n\n    epochs.forEach((epoch, colIndex) => {\n      const epochNo = parseInt(epoch, 10);\n      const canReceiveRewards = epochNo >= stakingFromEpoch + epochWaitPeriod;\n\n      const value = !canReceiveRewards\n        ? 0\n        : // Add 2 to account for name + quantity columns\n          calculationFn(\n            quantity,\n            reward,\n            epochNo,\n            rowIndex - hidden,\n            colIndex + 2,\n          );\n\n      row.push(value);\n    });\n\n    // Calculate totals\n    row.push(sum(row));\n\n    // Push rows to output array\n    output.push([reward.display_name, quantity, ...row]);\n  });\n  return output;\n};\n\nexport default function useStaking() {\n  const epochWaitPeriod = 4;\n  const { rewards, epochs } = reference as StakingReference;\n\n  const calculateStakingRewards = useCallback(\n    (\n      stakingFromEpoch: number,\n      showOnlyOwned: boolean,\n      quantityFn: Function,\n    ) => {\n      // Calculate total awards\n      const total = calculateRewards(\n        rewards,\n        stakingFromEpoch,\n        epochWaitPeriod,\n        showOnlyOwned,\n        quantityFn,\n        (quantity, reward, epochNo, rowIndex, colIndex) => {\n          return quantity * reward.epochs[epochNo];\n        },\n      );\n\n      // Calculate base\n      const base = calculateRewards(\n        rewards,\n        stakingFromEpoch,\n        epochWaitPeriod,\n        showOnlyOwned,\n        quantityFn,\n        (quantity, reward, epochNo, rowIndex, colIndex) => {\n          const totalColumnIndex = total[rowIndex].length - 2;\n          return quantity * reward.base;\n        },\n      );\n\n      // Calculate bonus\n      const bonus = calculateRewards(\n        rewards,\n        stakingFromEpoch,\n        epochWaitPeriod,\n        showOnlyOwned,\n        quantityFn,\n        (quantity, reward, epochNo, rowIndex, colIndex) => {\n          const epochsLeft = epochs.rewards.end - epochNo;\n          const bonusPercent = 100 * (0.2 * epochsLeft ** 0.5);\n          const bonusBase = base[rowIndex][colIndex];\n\n          return (bonusBase / 100) * bonusPercent;\n        },\n      );\n\n      // Remove asset name and quantity\n      // Really shouldn't add them on until we are done with numbers\n      // TODO:: Revisit this + adding prefixed columns\n      let totalRow = Array.from(total, ([...item]) => {\n        item.splice(0, 2);\n        return item;\n      });\n      const verticalTotals = sumVertically(totalRow);\n      totalRow = ['Total Rewards', null, ...verticalTotals];\n\n      return {\n        base,\n        bonus,\n        total,\n        totalRow,\n        totalRewards: totalRow.length > 2 ? totalRow[totalRow.length - 1] : 0,\n      };\n    },\n    [],\n  );\n\n  return {\n    calculateStakingRewards,\n    rewards,\n    epochs,\n  };\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype InputGroupProps = {\n  children: React.ReactNode;\n  className?: string\n};\n\nexport default function InputGroup({ children, className }: InputGroupProps) {\n  const classes = classNames({\n    \"block md:flex items-center mb-5\": true,\n    [`${className}`]: className !== null && className !== undefined\n  })\n\n  return <div className={classes}>{children}</div>;\n}\n","import React, { useContext, useState } from 'react';\nimport { rangeBetween } from '../../../../utils/math';\nimport { StakingContext } from '../../../context/staking';\nimport { useWallet } from '../../../context/wallet';\nimport useStaking from '../../../hooks/useStaking';\nimport { Checkbox, Input, Label, Select } from '../../atoms';\nimport InputGroup from '../../atoms/input-group';\nimport Validation from '../../atoms/validation';\n\nexport function AddressBar() {\n  const { setShowOnlyOwned, setStakingFromEpoch, stakingFromEpoch, showOnlyOwned } = useContext(StakingContext);\n  const { address, setAddress } = useWallet();\n  const { epochs } = useStaking();\n  const [addressError, setAddressError] = useState(false);\n\n  const epochOptions = rangeBetween(epochs.kickoff.start, epochs.kickoff.end);\n  console.log(addressError);\n  const handleOnChange = ({ target }) => {\n    const value = target.value;\n\n    // No point in doing anything too early\n    if (value && value.length > 5) {\n      // If address doesn't start with stake it's wrong\n      if (value.startsWith(\"stake\")) {\n        setAddressError(false);\n        setAddress(target.value);\n      }\n      else {\n        setAddressError(true);\n      }\n    }\n  }\n\n  const handleOnEpochChange = ({ target }) => {\n    setStakingFromEpoch(parseInt(target.value, 10));\n  }\n\n  const handleOnCheck = () => {\n    setShowOnlyOwned(!showOnlyOwned);\n  }\n\n  return (\n    <div className=\"md:flex mb-5\">\n      <div className=\"bg-stone-900 px-4 md:px-12 py-9 mb-5 rounded md:w-1/2 w-full md:mr-2\">\n        <InputGroup>\n          <Label>Enter Bech32 Address (Starts with <i>stake</i>)</Label>\n          <InputGroup className='flex-wrap md:flex-1'>\n            <Input error={addressError} onChange={handleOnChange} onEnterPress={handleOnChange} value={address} />\n            <Validation visible={addressError}>Address is not valid. Please use the address starting \"stake....\"</Validation>\n          </InputGroup>\n        </InputGroup>\n        <InputGroup>\n          <Label>When did you start staking?</Label>\n          <Select value={stakingFromEpoch} onChange={handleOnEpochChange} options={epochOptions} />\n        </InputGroup>\n      </div>\n      <div className=\"bg-stone-900 px-2 py-9 mb-5 rounded w-full md:w-1/2 md:ml-2\">\n        <InputGroup>\n          <Checkbox checked={showOnlyOwned} onChange={handleOnCheck} />\n          <Label className=\"md:w-full mr-6 text-left text-gray-300\">Only show owned NFT's</Label>\n        </InputGroup>\n      </div></div>\n  );\n}\n","import React from 'react';\n\ninterface TableProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableElement>,\n    HTMLTableElement\n  > {\n  children?: React.ReactNode\n}\n\nexport default function Table({ children, ...props }: TableProps) {\n  return (\n    <div className=\"overflow-x-auto mb-5\">\n      <table className=\" table-fixed min-w-full bg-stone-900 rounded-lg overflow-hidden mb-1\" {...props}>\n        {children}\n      </table>\n    </div>\n  );\n}\n\n\n","import React from 'react';\n\ninterface TableBodyProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLBodyElement>,\n    HTMLBodyElement\n  > {\n  children?: React.ReactNode\n}\n\nexport default function TBody({ children, ...props }: TableBodyProps) {\n  return (\n    <tbody className=\"\" {...props}>\n      {children}\n    </tbody>\n  );\n}\n\n\n","import React from 'react';\n\ninterface TableHeadProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableSectionElement>,\n    HTMLTableSectionElement\n  > {\n  children?: React.ReactNode\n}\n\nexport default function THead({ children, ...props }: TableHeadProps) {\n  return (\n    <thead {...props}>\n      {children}\n    </thead>\n\n  );\n}\n\n\n","import React from 'react';\n\ninterface TableRowProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableRowElement>,\n    HTMLTableRowElement\n  > {\n  children?: React.ReactNode\n}\nexport default function HeadTr({ children, ...props }: TableRowProps) {\n  return (\n    <tr className=\"rounded-l-lg mb-2 border-grey-light border-b\" {...props}>\n      {children}\n    </tr>\n  );\n}\n\n\n\n\n\n","import React from 'react';\n\ninterface TableBodyRowProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableRowElement>,\n    HTMLTableRowElement\n  > {\n  children?: React.ReactNode\n}\nexport default function BodyTr({ children, ...props }: TableBodyRowProps) {\n  return (\n    <tr className=\"mb-2 hover:bg-stone-800 border-grey-light border-b\" {...props}>\n      {children}\n    </tr>\n  );\n}\n\n\n","import React from 'react';\n\ninterface TableHeaderProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableCellElement>,\n    HTMLTableCellElement\n  > {\n  children?: React.ReactNode\n}\nexport default function Th({ children, ...props }: TableHeaderProps) {\n  return (\n    <th className=\"p-3 text-left\" {...props}>\n      {children}\n    </th>\n  );\n}\n\n\n","import React from 'react';\n\ninterface TableCellProps\n  extends React.DetailedHTMLProps<\n    React.TableHTMLAttributes<HTMLTableCellElement>,\n    HTMLTableCellElement\n  > {\n  children?: React.ReactNode\n}\n\nexport default function Td({ children, ...props }: TableCellProps) {\n  return (\n    <td className=\"hover:bg-stone-700 p-3\" {...props}>{children}</td>\n  )\n}\n\n\n","import React from 'react';\n\nimport { Table, TBody, TBodyTr, Td, Th, THead, THeadTr } from '../../atoms/table';\n\ntype SimpleTableProps = {\n  headers?: Array<any>,\n  body?: Array<Array<any>>,\n  children?: Function,\n  loading?: boolean\n};\n\nexport default function SimpleTable({ headers, children, body, loading }: SimpleTableProps) {\n\n  const placeholder = () => {\n    const array = [...Array(5)].map(e => new Array(headers?.length ?? 5).fill(null));\n\n    return array.map((row, index) => (\n      <TBodyTr key={index}>\n        {\n          row.map((value, rIndex) => (\n            <Td className=\"animate-pulse\" key={rIndex}>\n              <span className=\"block p-5 bg-stone-800\"></span>\n            </Td>\n          ))}\n      </TBodyTr>\n    ));\n  }\n\n  return (\n    <Table>\n      {headers && <THead>\n        <THeadTr>\n          {\n            headers.map((header, index) => (\n              <Th key={index}>\n                {header}\n              </Th>\n            ))\n          }\n        </THeadTr>\n      </THead>}\n      <TBody>\n        {\n          loading ? placeholder() :\n            body && body.map((row, index) => (\n              <TBodyTr key={index}>\n                {row.map((value, index) => <Td key={index}>{children ? children(value, index) : value}</Td>)}\n              </TBodyTr>\n            ))\n        }\n      </TBody>\n    </Table>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\nimport { HeaderProps } from './header-props';\n\nexport default function Heading({ children, center = false, level = 1 }: HeaderProps) {\n  const classes = classNames({\n    'font-medium leading-tight mt-0 mb-5': true,\n    'text-4xl': level === 1,\n    'text-3xl': level === 2,\n    'text-2xl': level === 3,\n    'text-xl': level === 4,\n    'text-center': center\n  });\n\n  const Tag = `h${level}` as keyof JSX.IntrinsicElements;\n\n  return (\n    <Tag className={classes}>\n      {children}\n    </Tag>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport useStaking from '../hooks/useStaking';\nimport { useWallet } from '../context/wallet';\nimport { rangeBetween, round } from '../../utils/math';\n\nimport { AddressBar } from '../UI/organisms';\nimport { StakingContext } from '../context/staking';\nimport SimpleTable from '../UI/molecules/simple-table';\nimport { Heading } from '../UI/atoms/headings';\nimport { Alert } from '../UI/atoms';\nimport { Type } from '../UI/atoms/alert';\n\nfunction NFTStaking() {\n  const { stakingFromEpoch, showOnlyOwned } = useContext(StakingContext);\n  const { calculateStakingRewards, epochs } = useStaking();\n  const { countNftsByName, nfts, loading } = useWallet();\n  const { total, base, bonus, totalRow, totalRewards } = calculateStakingRewards(stakingFromEpoch, showOnlyOwned, countNftsByName);\n\n  const headers = ['Asset Name', 'Quantity Staked', ...(rangeBetween(epochs.rewards.start, epochs.rewards.end)), \"Total\"];\n\n  return (\n    <div className=\"container mx-auto\">\n      <Heading level={2} center>Rewards Estimator <span className=\"italic\">(NFT Rewards Only)</span></Heading>\n      <Alert type={Type.warning}>\n        DISCLAIMER: This calculator assumes all assets in wallet were delegated in the same epoch. If your assets were delegated in different epochs, you must calculate those separately\n      </Alert>\n\n      <AddressBar />\n\n      <Heading level={3}>\n        <span className=\"md:flex md:justify-between\">\n          <span className=\"w-full block mb-2 md:mb-0 md:w-auto md:flex-initial\">Total Rewards</span>\n          <span className=\"text-xl w-full block md:w-auto md:flex-initial\">Total COPI Rewards for staked land NFTs: {loading ? \"N/A\" : <span className=\"font-bold text-green-400\">{round(totalRewards, 1).toLocaleString()}</span>}</span>\n        </span>\n      </Heading>\n      <SimpleTable loading={loading} headers={headers} body={[totalRow, ...total]}>\n        {(value, index) => index > 1 ? round(value, 1).toFixed(1) : value}\n      </SimpleTable>\n      <div className='p-5'></div>\n\n      <Heading level={3}>Base Rewards</Heading>\n      <SimpleTable loading={loading} headers={headers} body={base}>\n        {(value, index) => index > 1 ? value.toFixed(1) : value}\n      </SimpleTable>\n      <div className='p-5'></div>\n\n      <Heading level={3}>Bonus Rewards</Heading>\n      <SimpleTable loading={loading} headers={headers} body={bonus}>\n        {(value, index) => index > 1 ? round(value, 1).toFixed(1) : value}\n      </SimpleTable>\n    </div>\n  );\n}\n\nexport default NFTStaking;\n"],"names":["Input","props","error","onEnterPress","onChange","onKeyDown","classes","classNames","handleKeyPress","evt","key","DebounceInput","Select","options","map","option","value","label","Label","children","Type","warning","success","Alert","type","title","containerClasses","iconClasses","_jsx","_jsxs","Validation","visible","round","decimals","roundTo","rangeBetween","start","end","range","i","sum","array","a","b","sumVertically","r","calculateRewards","rewards","stakingFromEpoch","epochWaitPeriod","showOnlyOwned","quantityFn","calculationFn","hidden","output","reward","rowIndex","quantity","epochs","row","epoch","colIndex","epochNo","useStaking","reference","useCallback","total","base","bonus","epochsLeft","bonusPercent","totalRow","item","verticalTotals","InputGroup","className","undefined","AddressBar","setShowOnlyOwned","setStakingFromEpoch","useContext","StakingContext","address","setAddress","useWallet","addressError","setAddressError","useState","epochOptions","kickoff","console","log","handleOnChange","target","length","startsWith","parseInt","Checkbox","handleOnCheck","Table","TBody","THead","HeadTr","BodyTr","Th","Td","SimpleTable","headers","body","loading","placeholder","Array","e","fill","index","TBodyTr","rIndex","THeadTr","header","Heading","center","level","Tag","NFTStaking","calculateStakingRewards","countNftsByName","nfts","totalRewards","toLocaleString","toFixed"],"mappings":"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"}